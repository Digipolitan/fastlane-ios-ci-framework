desc "Build and run all tests for the given environment"
desc "####Example:"
desc "```\nfastlane travis_framework_tests workspace:NAME.xcworkspace\n```"
desc "####How to install ?"
desc "This lane require the `tests` lane define in [Digipolitan/fastlane-ios-common](https://github.com/Digipolitan/fastlane-ios-common)"
desc "```\nimport_from_git(\n  url: 'https://github.com/Digipolitan/fastlane-ios-common'\n)\n```"
desc "####Options"
desc "* **workspace**: The workspace to use."
desc "  * **environment_variable**: DG_WORKSPACE"
desc "  * **type**: string"
desc "  * **optional**: true"
desc "* **name**: The framework name."
desc "  * **environment_variable**: DG_FRAMEWORK_NAME"
desc "  * **type**: string"
desc "  * **optional**: true"
desc "* **project**: The project to use."
desc "  * **environment_variable**: DG_PROJECT"
desc "  * **type**: string"
desc "  * **optional**: true"
desc "* **scheme**: The scheme into the workspace to execute."
desc "  * **environment_variable**: DG_SCHEME"
desc "  * **type**: string"
desc "  * **optional**: true"
desc "* **skip_slack**: Skip slack notification even if a SLACK_URL is define."
desc "  * **type**: boolean"
desc "  * **optional**: true"
desc "  * **default_value**: false"
desc "####Environment variables"
desc "* **SLACK_URL**: The slack Hook URL"
desc "  * **type**: string"
desc "  * **optional**: true"
desc ""
lane :travis_framework_tests do |options|
  if ENV['TRAVIS'] == nil
    UI.user_error! "Only travis can run this lane"
  end
  project = options[:project] != nil ? options[:project] : ENV['DG_PROJECT']
  if options[:skip_slack] != true
    slack(
      message: "Starting framework CI",
      payload: {
        "Git Branch" => git_branch(),
        "Version" => get_version_number(xcodeproj: project),
        "Build By" => "Travis"
      },
      default_payloads: [:git_author]
    )
  end
  tests(
    workspace: options[:workspace],
    project: project,
    scheme: options[:scheme],
    skip_slack: options[:skip_slack],
    clean: true
  )
end

desc "Travis after success lane, the action depend of the current git branch"
desc "For all branches run **code coverage** and submit stat to slack"
desc "After that only for the **master branch**, deploy framework to **github** and **cocoapods**"
desc "####How to install ?"
desc "This lane require the `coverage` lane define in [Digipolitan/fastlane-ios-common](https://github.com/Digipolitan/fastlane-ios-common)"
desc "```\nimport_from_git(\n  url: 'https://github.com/Digipolitan/fastlane-ios-common'\n)\n```"
desc "This lane require :"
desc "- `framework_deploy_github` lane **if github_repository_name != nil**"
desc "- `framework_deploy_cocoapods` lane **if skip_cocoapods != true**"
desc "Define in [Digipolitan/fastlane-ios-framework](https://github.com/Digipolitan/fastlane-ios-framework)"
desc "```\nimport_from_git(\n  url: 'https://github.com/Digipolitan/fastlane-ios-framework'\n)\n```"
desc "####Options"
desc "* **github_repository_name**: The GitHub repository name such as 'company/project'"
desc "  * **environment_variable**: DG_GITHUB_REPOSITORY_NAME"
desc "  * **type**: string"
desc "  * **optional**: true"
desc "* **workspace**: The workspace to use."
desc "  * **environment_variable**: DG_WORKSPACE"
desc "  * **type**: string"
desc "  * **optional**: true"
desc "* **project**: The project to use."
desc "  * **environment_variable**: DG_PROJECT"
desc "  * **type**: string"
desc "  * **optional**: true"
desc "* **scheme**: The scheme into the workspace to execute."
desc "  * **environment_variable**: DG_SCHEME"
desc "  * **type**: string"
desc "  * **optional**: true"
desc "* **skip_slack**: Skip slack notification even if a SLACK_URL is define."
desc "  * **type**: boolean"
desc "  * **optional**: true"
desc "  * **default_value**: false"
desc "* **skip_cocoapods**: Skip cocoapods deployment"
desc "  * **type**: boolean"
desc "  * **optional**: true"
desc "  * **default_value**: false"
desc "* **skip_carthage**: Skip carthage deployment"
desc "  * **type**: boolean"
desc "  * **optional**: true"
desc "  * **default_value**: false"
desc "####Environment variables"
desc "* **SLACK_URL**: The slack Hook URL"
desc "  * **type**: string"
desc "  * **optional**: true"
desc ""
lane :travis_framework_after_success_action do |options|
  if ENV['TRAVIS'] == nil
    UI.user_error! "Only travis can run this lane"
  end
  coverage(
    workspace: options[:workspace],
    project: options[:project],
    scheme: options[:scheme],
    skip_slack: options[:skip_slack]
  )
  if git_branch() == "master"
    notification_payload = {
      "Git Branch" => ENV['TRAVIS_BRANCH'],
      "Build By" => "Travis"
    }
    if options[:skip_carthage] != true
      carthage(
        command: "build",
        platform: "all",
        no_skip_current: true
      )
    end
    github_repository_name = options[:github_repository_name] != nil ? options[:github_repository_name] : ENV["DG_GITHUB_REPOSITORY_NAME"]
    if github_repository_name != nil
      framework_deploy_github(
        repository_name: github_repository_name,
        skip_carthage: options[:skip_carthage]
      )
      notification_payload["GitHub Release"] = lane_context[:SET_GITHUB_RELEASE_HTML_LINK]
    end
    if options[:skip_cocoapods] != true
      podspec_path = options[:podspec_path] != nil ? options[:podspec_path] : ENV['DG_PODSPEC_PATH']
      framework_deploy_cocoapods(podspec_path: podspec_path)
      notification_payload["CocoaPods"] = lane_context[:DG_COCOAPODS_RELEASE_LINK]
    end

    if options[:skip_slack] != true
      slack(
        message: "Successfully distributed framework CI",
        payload: notification_payload,
        default_payloads: []
      )
    end
  end
end
